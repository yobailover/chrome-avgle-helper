(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a;}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r);},p,p.exports,r,e,n,t);}return n[i].exports;}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o;}return r;})()({1:[function(require,module,exports){'use strict';var _inject_utils=require('./inject_utils');var _inject_utils2=_interopRequireDefault(_inject_utils);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}document.querySelectorAll('.video-title').forEach(e=>{let carName=_inject_utils2.default.parseCarNumber(e.innerText);let dom=document.createElement('div');dom.className=carName?"text-success":"text-muted";dom.innerHTML=`<b>${carName||"unknown"}</b>`;e.parentNode.appendChild(dom);});},{"./inject_utils":2}],2:[function(require,module,exports){'use strict';Object.defineProperty(exports,"__esModule",{value:true});let exportFunctions={getInjectCodes,parseCarNumber};exports.default=exportFunctions;function getInjectCodes(wrapperName){let result=`window.${wrapperName} = {};`;result+=Object.keys(exportFunctions).map(funcName=>{let funcBody=exportFunctions[funcName].toString();return`${wrapperName}.${funcName} = ${funcBody};`;}).join('');return result;}function parseCarNumber(str=''){const matchers=[[/LOVE[-\s](\d{3,4})/i,match=>`LOVE-${match[1]}`],[/10musume[-_\s](\d{6})[-_\s](\d{2})/i,match=>`10musume-${match[1]}-${match[2]}`],[/fc2[\s\-_]?ppv[\s\-_]?(\d+)/i,match=>`FC2-PPV-${match[1]}`],[/S-Cute\s+(\w+)\s+#(\d+)/i,match=>`S-Cute-${match[1]}-${match[2]}`],[/Heydouga[-_\s]?(\d+)[-_\s]?(\d+)/i,match=>`Heydouga-${match[1]}-${match[2]}`],[/heyzo[-_\s]?(\d+)/i,match=>`heyzo-${match[1]}`],[/(\d+)[-_\s](\d+)[-_\s]Carib(?:bean(?:com)?)?/i,match=>`carib-${match[1]}-${match[2]}`],[/Carib(?:bean(?:com)?)?[-_\s]?(\d+)[-_\s]?(\d+)/i,match=>`carib-${match[1]}-${match[2]}`],/\w+-\d+/i,[/(\w{8,})[-_\s](\d{5,})[-_\s](\d{3,})/,match=>`${match[1]}-${match[2]}-${match[3]}`]];for(let matcher of matchers){if(Array.isArray(matcher)){let result=str.match(matcher[0]);if(result)return matcher[1](result);}else{let result=str.match(matcher);if(result)return result[0];}}return null;}},{}]},{},[1]);
//# sourceMappingURL=inject_to_normal.js.map